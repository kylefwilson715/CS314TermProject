{"ast":null,"code":"var _jsxFileName = \"/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChat = ({\n  userId\n}) => {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    console.log(\"ðŸ“Œ Joined group:\", groupId);\n    socket.emit(\"joinGroup\", groupId);\n    socket.on(\"receiveMessage\", message => {\n      console.log(\"ðŸ“© Received message:\", message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  }, [groupId]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (input.trim()) {\n      const token = localStorage.getItem(\"token\");\n      const messageData = {\n        token,\n        sender: \"testing\",\n        // Replace with actual sender info\n        content: input,\n        groupId\n      };\n      console.log(\"ðŸš€ Sending group message:\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupChat, \"ZHd/H3h2U3BnIhjG7OU8JgwJ1K8=\", false, function () {\n  return [useParams];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","socket","jsxDEV","_jsxDEV","GroupChat","userId","_s","groupId","messages","setMessages","input","setInput","console","log","emit","on","message","prevMessages","off","sendMessage","e","preventDefault","trim","token","localStorage","getItem","messageData","sender","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\n\nconst GroupChat = ({ userId }) => {\n  const { groupId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"ðŸ“Œ Joined group:\", groupId);\n    socket.emit(\"joinGroup\", groupId);\n\n    socket.on(\"receiveMessage\", (message) => {\n      console.log(\"ðŸ“© Received message:\", message);\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  }, [groupId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (input.trim()) {\n      const token = localStorage.getItem(\"token\");\n      const messageData = {\n        token,\n        sender: \"testing\", // Replace with actual sender info\n        content: input,\n        groupId,\n      };\n\n      console.log(\"ðŸš€ Sending group message:\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Group Chat</h2>\n      <div>\n        {messages.map((msg, index) => (\n          <div key={index}>\n            <strong>{msg.sender}:</strong> {msg.content}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default GroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}