{"ast":null,"code":"var _jsxFileName = \"/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js\",\n  _s = $RefreshSig$();\n// src/pages/GroupsList.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupsList = ({\n  userId\n}) => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    let currentUserId = userId; // Use prop first if available\n\n    if (!currentUserId) {\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        try {\n          const parsedUser = JSON.parse(storedUser);\n          currentUserId = parsedUser.id || parsedUser._id; // Handle both \"id\" and \"_id\"\n        } catch (err) {\n          console.error(\"‚ùå Error parsing user from localStorage:\", err);\n        }\n      }\n    }\n    console.log(\"üîç Resolved userId:\", currentUserId);\n    if (!currentUserId) {\n      setLoading(false);\n      setError(\"No user ID found.\");\n      return;\n    }\n    const fetchGroups = async () => {\n      try {\n        console.log(\"üîç Fetching groups for user:\", currentUserId);\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${currentUserId}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch groups: ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log(\"‚úÖ Groups fetched:\", data);\n        setGroups(data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching groups:\", error);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGroups();\n  }, [userId]);\n  const handleGroupClick = groupId => {\n    console.log(`üìå Navigating to group chat: ${groupId}`);\n    navigate(`/group/${groupId}`);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u23F3 Loading groups...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u26A0\\uFE0F Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), groups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDEAB No groups found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"groups-list\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleGroupClick(group._id),\n        children: [group.name, \" (\", group.members.length, \" members)\"]\n      }, group._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/create-group\"),\n      children: \"\\u2795 Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupsList, \"q0R2lfkrzJMGh8MufYAhObT00Uk=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupsList;\nexport default GroupsList;\nvar _c;\n$RefreshReg$(_c, \"GroupsList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GroupsList","userId","_s","groups","setGroups","loading","setLoading","error","setError","navigate","currentUserId","storedUser","localStorage","getItem","parsedUser","JSON","parse","id","_id","err","console","log","fetchGroups","response","fetch","ok","Error","statusText","data","json","handleGroupClick","groupId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","group","onClick","name","members","_c","$RefreshReg$"],"sources":["/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js"],"sourcesContent":["// src/pages/GroupsList.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GroupsList = ({ userId }) => {\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let currentUserId = userId; // Use prop first if available\n\n    if (!currentUserId) {\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        try {\n          const parsedUser = JSON.parse(storedUser);\n          currentUserId = parsedUser.id || parsedUser._id; // Handle both \"id\" and \"_id\"\n        } catch (err) {\n          console.error(\"‚ùå Error parsing user from localStorage:\", err);\n        }\n      }\n    }\n\n    console.log(\"üîç Resolved userId:\", currentUserId);\n\n    if (!currentUserId) {\n      setLoading(false);\n      setError(\"No user ID found.\");\n      return;\n    }\n\n    const fetchGroups = async () => {\n      try {\n        console.log(\"üîç Fetching groups for user:\", currentUserId);\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${currentUserId}`);\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch groups: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log(\"‚úÖ Groups fetched:\", data);\n\n        setGroups(data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching groups:\", error);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchGroups();\n  }, [userId]);\n\n  const handleGroupClick = (groupId) => {\n    console.log(`üìå Navigating to group chat: ${groupId}`);\n    navigate(`/group/${groupId}`);\n  };\n\n  if (loading) return <p>‚è≥ Loading groups...</p>;\n  if (error) return <p>‚ö†Ô∏è Error: {error}</p>;\n\n  return (\n    <div className=\"groups-container\">\n      <h2>My Groups</h2>\n      {groups.length === 0 ? (\n        <p>üö´ No groups found.</p>\n      ) : (\n        <ul className=\"groups-list\">\n          {groups.map((group) => (\n            <li key={group._id} onClick={() => handleGroupClick(group._id)}>\n              {group.name} ({group.members.length} members)\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={() => navigate(\"/create-group\")}>‚ûï Create Group</button>\n    </div>\n  );\n};\n\nexport default GroupsList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}