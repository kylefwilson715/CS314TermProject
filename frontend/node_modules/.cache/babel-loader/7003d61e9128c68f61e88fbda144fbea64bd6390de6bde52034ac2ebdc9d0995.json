{"ast":null,"code":"var _jsxFileName = \"/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js\",\n  _s = $RefreshSig$();\n// src/pages/GroupsList.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupsList = ({\n  userId\n}) => {\n  _s();\n  const [groups, setGroups] = useState([]); // ✅ Always start with an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        console.log(`Fetching groups for user: ${userId}`);\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${userId}`);\n        if (!response.ok) throw new Error(\"Failed to fetch groups\");\n        const data = await response.json();\n        console.log(\"Groups received:\", data);\n        if (Array.isArray(data)) {\n          setGroups(data); // ✅ Only set if it's an array\n        } else {\n          setGroups([]); // ✅ Prevents .map() errors\n        }\n      } catch (err) {\n        console.error(\"❌ Error fetching groups:\", err);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    console.log(\"🟢 GroupsList component is rendering!\");\n    if (userId) fetchGroups();\n  }, [userId]);\n  const handleGroupClick = groupId => {\n    navigate(`/group-chat/${groupId}`);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading groups...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), groups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No groups found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"groups-list\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleGroupClick(group._id),\n        children: [group.name, \" (\", group.members.length, \" members)\"]\n      }, group._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/create-group\"),\n      children: \"\\u2795 Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupsList, \"q0R2lfkrzJMGh8MufYAhObT00Uk=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupsList;\nexport default GroupsList;\nvar _c;\n$RefreshReg$(_c, \"GroupsList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GroupsList","userId","_s","groups","setGroups","loading","setLoading","error","setError","navigate","fetchGroups","console","log","response","fetch","ok","Error","data","json","Array","isArray","err","handleGroupClick","groupId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","group","onClick","_id","name","members","_c","$RefreshReg$"],"sources":["/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js"],"sourcesContent":["// src/pages/GroupsList.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GroupsList = ({ userId }) => {\n  const [groups, setGroups] = useState([]); // ✅ Always start with an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        console.log(`Fetching groups for user: ${userId}`);\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${userId}`);\n\n        if (!response.ok) throw new Error(\"Failed to fetch groups\");\n\n        const data = await response.json();\n        console.log(\"Groups received:\", data);\n\n        if (Array.isArray(data)) {\n          setGroups(data); // ✅ Only set if it's an array\n        } else {\n          setGroups([]); // ✅ Prevents .map() errors\n        }\n      } catch (err) {\n        console.error(\"❌ Error fetching groups:\", err);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\tconsole.log(\"🟢 GroupsList component is rendering!\");\n\n    if (userId) fetchGroups();\n  }, [userId]);\n\n  const handleGroupClick = (groupId) => {\n    navigate(`/group-chat/${groupId}`);\n  };\n\n  if (loading) return <p>Loading groups...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div className=\"groups-container\">\n      <h2>My Groups</h2>\n      {groups.length === 0 ? (\n        <p>No groups found.</p>\n      ) : (\n        <ul className=\"groups-list\">\n          {groups.map((group) => (\n            <li key={group._id} onClick={() => handleGroupClick(group._id)}>\n              {group.name} ({group.members.length} members)\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={() => navigate(\"/create-group\")}>➕ Create Group</button>\n    </div>\n  );\n};\n\nexport default GroupsList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}