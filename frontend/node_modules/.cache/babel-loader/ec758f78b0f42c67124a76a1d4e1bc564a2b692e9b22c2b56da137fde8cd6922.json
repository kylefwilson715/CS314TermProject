{"ast":null,"code":"var _jsxFileName = \"/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupsList = ({\n  userId\n}) => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        console.log(\"üîç Fetching groups for user:\", userId);\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${userId}`);\n        const data = await response.json();\n        console.log(\"‚úÖ Groups fetched:\", data);\n        setGroups(data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching groups:\", error);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) {\n      fetchGroups();\n    } else {\n      setLoading(false);\n      setError(\"No user ID found.\");\n    }\n  }, [userId]);\n  const handleGroupClick = groupId => {\n    console.log(`üìå Navigating to group chat: ${groupId}`);\n    navigate(`/group/${groupId}`);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u23F3 Loading groups...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u26A0\\uFE0F Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), groups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDEAB No groups found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"groups-list\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleGroupClick(group._id),\n        children: [group.name, \" (\", group.members.length, \" members)\"]\n      }, group._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/create-group\"),\n      children: \"\\u2795 Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupsList, \"q0R2lfkrzJMGh8MufYAhObT00Uk=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupsList;\nexport default GroupsList;\nvar _c;\n$RefreshReg$(_c, \"GroupsList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GroupsList","userId","_s","groups","setGroups","loading","setLoading","error","setError","navigate","fetchGroups","console","log","response","fetch","data","json","handleGroupClick","groupId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","group","onClick","_id","name","members","_c","$RefreshReg$"],"sources":["/Users/kylewilson/CS314TermProject/frontend/src/pages/GroupsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GroupsList = ({ userId }) => {\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        console.log(\"üîç Fetching groups for user:\", userId);\n\n        const response = await fetch(`http://localhost:5001/api/groups/my-groups/${userId}`);\n        const data = await response.json();\n\n        console.log(\"‚úÖ Groups fetched:\", data);\n        setGroups(data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching groups:\", error);\n        setError(\"Failed to load groups\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (userId) {\n      fetchGroups();\n    } else {\n      setLoading(false);\n      setError(\"No user ID found.\");\n    }\n  }, [userId]);\n\n  const handleGroupClick = (groupId) => {\n    console.log(`üìå Navigating to group chat: ${groupId}`);\n    navigate(`/group/${groupId}`);\n  };\n\n  if (loading) return <p>‚è≥ Loading groups...</p>;\n  if (error) return <p>‚ö†Ô∏è Error: {error}</p>;\n\n  return (\n    <div className=\"groups-container\">\n      <h2>My Groups</h2>\n      {groups.length === 0 ? (\n        <p>üö´ No groups found.</p>\n      ) : (\n        <ul className=\"groups-list\">\n          {groups.map((group) => (\n            <li key={group._id} onClick={() => handleGroupClick(group._id)}>\n              {group.name} ({group.members.length} members)\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={() => navigate(\"/create-group\")}>‚ûï Create Group</button>\n    </div>\n  );\n};\n\nexport default GroupsList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}